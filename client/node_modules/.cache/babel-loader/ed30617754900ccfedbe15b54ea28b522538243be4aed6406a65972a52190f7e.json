{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [userType, setUserType] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUserType = localStorage.getItem('userType');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUserType && storedUser) {\n      setToken(storedToken);\n      setUserType(storedUserType);\n      setUser(JSON.parse(storedUser));\n\n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password, isSupport = false) => {\n    try {\n      const endpoint = isSupport ? '/api/support/login' : '/api/login';\n      const response = await axios.post(`http://localhost:3001${endpoint}`, {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      const type = isSupport ? 'support' : 'user';\n      setToken(newToken);\n      setUser(userData);\n      setUserType(type);\n\n      // In localStorage speichern\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('userType', type);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Anmeldung fehlgeschlagen');\n    }\n  };\n  const register = async (email, password, firstName, lastName) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/register', {\n        email,\n        password,\n        firstName,\n        lastName\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      setToken(newToken);\n      setUser(userData);\n      setUserType('user');\n\n      // In localStorage speichern\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('userType', 'user');\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registrierung fehlgeschlagen');\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setUserType(null);\n    setToken(null);\n\n    // Aus localStorage entfernen\n    localStorage.removeItem('token');\n    localStorage.removeItem('userType');\n    localStorage.removeItem('user');\n\n    // Token aus axios defaults entfernen\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const value = {\n    user,\n    userType,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"BXDOI7/vFKr1Ed7Ow/G+ueFsJWE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","userType","setUserType","token","setToken","loading","setLoading","storedToken","localStorage","getItem","storedUserType","storedUser","JSON","parse","defaults","headers","common","login","email","password","isSupport","endpoint","response","post","newToken","userData","data","type","setItem","stringify","error","_error$response","_error$response$data","register","firstName","lastName","_error$response2","_error$response2$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  userType: 'user' | 'support' | null;\n  token: string | null;\n  login: (email: string, password: string, isSupport?: boolean) => Promise<void>;\n  register: (email: string, password: string, firstName: string, lastName: string) => Promise<void>;\n  logout: () => void;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userType, setUserType] = useState<'user' | 'support' | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUserType = localStorage.getItem('userType');\n    const storedUser = localStorage.getItem('user');\n\n    if (storedToken && storedUserType && storedUser) {\n      setToken(storedToken);\n      setUserType(storedUserType as 'user' | 'support');\n      setUser(JSON.parse(storedUser));\n      \n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string, isSupport: boolean = false) => {\n    try {\n      const endpoint = isSupport ? '/api/support/login' : '/api/login';\n      const response = await axios.post(`http://localhost:3001${endpoint}`, {\n        email,\n        password\n      });\n\n      const { token: newToken, user: userData } = response.data;\n      const type = isSupport ? 'support' : 'user';\n\n      setToken(newToken);\n      setUser(userData);\n      setUserType(type);\n\n      // In localStorage speichern\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('userType', type);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Anmeldung fehlgeschlagen');\n    }\n  };\n\n  const register = async (email: string, password: string, firstName: string, lastName: string) => {\n    try {\n      const response = await axios.post('http://localhost:3001/api/register', {\n        email,\n        password,\n        firstName,\n        lastName\n      });\n\n      const { token: newToken, user: userData } = response.data;\n\n      setToken(newToken);\n      setUser(userData);\n      setUserType('user');\n\n      // In localStorage speichern\n      localStorage.setItem('token', newToken);\n      localStorage.setItem('userType', 'user');\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Token zu axios defaults hinzufügen\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\n    } catch (error: any) {\n      throw new Error(error.response?.data?.error || 'Registrierung fehlgeschlagen');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setUserType(null);\n    setToken(null);\n\n    // Aus localStorage entfernen\n    localStorage.removeItem('token');\n    localStorage.removeItem('userType');\n    localStorage.removeItem('user');\n\n    // Token aus axios defaults entfernen\n    delete axios.defaults.headers.common['Authorization'];\n  };\n\n  const value = {\n    user,\n    userType,\n    token,\n    login,\n    register,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}